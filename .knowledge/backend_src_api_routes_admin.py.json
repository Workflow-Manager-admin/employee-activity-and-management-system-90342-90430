{"is_source_file": true, "format": "Python", "description": "This file defines API routes for administrative functions in an employee management system using FastAPI. It includes endpoints for dashboard statistics, audit trails, system settings, bulk employee creation, and productivity reports.", "external_files": ["../models", "../storage", "../auth"], "external_methods": ["storage.get_all_employees", "storage._read_json_file", "storage.get_settings", "storage.update_settings", "storage.create_audit_entry", "storage.create_employee", "storage.get_work_logs_by_employee", "get_admin_user"], "published": ["router"], "classes": [{"name": "DashboardStats", "description": "Response model representing dashboard statistics for admin overview."}, {"name": "AuditTrail", "description": "Model representing audit trail entries."}, {"name": "SystemSettings", "description": "Model representing system configuration settings."}], "methods": [{"name": "get_dashboard_stats(current_user: Employee = Depends(get_admin_user))", "description": "Endpoint to retrieve aggregate dashboard metrics such as employee counts, leave requests, recent work logs, and completion rate.", "scope": "", "scopeKind": ""}, {"name": "get_audit_trails( limit: int = Query(100, le=1000), user_id: Optional[str] = Query(None), action: Optional[ActionType] = Query(None), resource_type: Optional[str] = Query(None), current_user: Employee = Depends(get_admin_user) )", "description": "Endpoint to fetch filtered audit trail entries with optional query parameters.", "scope": "", "scopeKind": ""}, {"name": "get_system_settings(current_user: Employee = Depends(get_admin_user))", "description": "Retrieve current system settings.", "scope": "", "scopeKind": ""}, {"name": "update_system_settings( settings_update: SettingsUpdate, current_user: Employee = Depends(get_admin_user) )", "description": "Update system configuration with provided settings and log the change.", "scope": "", "scopeKind": ""}, {"name": "bulk_create_employees( employees_data: List[dict], current_user: Employee = Depends(get_admin_user) )", "description": "Create multiple employee records in bulk from provided data, handling errors per record.", "scope": "", "scopeKind": ""}, {"name": "get_productivity_report( start_date: Optional[str] = Query(None), end_date: Optional[str] = Query(None), department: Optional[str] = Query(None), current_user: Employee = Depends(get_admin_user) )", "description": "Generate a productivity report for employees within an optional date range and department filter.", "scope": "", "scopeKind": ""}], "calls": ["storage.get_all_employees", "storage._read_json_file", "storage.get_settings", "storage.update_settings", "storage.create_audit_entry", "storage.create_employee", "storage.get_work_logs_by_employee", "get_admin_user"], "search-terms": ["admin routes", "dashboard statistics", "audit trail", "system settings", "bulk employee creation", "productivity report", "FastAPI", "APIRouter"], "state": 2, "file_id": 13, "knowledge_revision": 27, "git_revision": "", "ctags": [{"_type": "tag", "name": "bulk_create_employees", "path": "/home/kavia/workspace/code-generation/employee-activity-and-management-system-90342-90430/backend/src/api/routes/admin.py", "pattern": "/^async def bulk_create_employees($/", "language": "Python", "kind": "function", "signature": "( employees_data: List[dict], current_user: Employee = Depends(get_admin_user) )"}, {"_type": "tag", "name": "get_audit_trails", "path": "/home/kavia/workspace/code-generation/employee-activity-and-management-system-90342-90430/backend/src/api/routes/admin.py", "pattern": "/^async def get_audit_trails($/", "language": "Python", "kind": "function", "signature": "( limit: int = Query(100, le=1000), user_id: Optional[str] = Query(None), action: Optional[ActionType] = Query(None), resource_type: Optional[str] = Query(None), current_user: Employee = Depends(get_admin_user) )"}, {"_type": "tag", "name": "get_dashboard_stats", "path": "/home/kavia/workspace/code-generation/employee-activity-and-management-system-90342-90430/backend/src/api/routes/admin.py", "pattern": "/^async def get_dashboard_stats(current_user: Employee = Depends(get_admin_user)):$/", "language": "Python", "kind": "function", "signature": "(current_user: Employee = Depends(get_admin_user))"}, {"_type": "tag", "name": "get_productivity_report", "path": "/home/kavia/workspace/code-generation/employee-activity-and-management-system-90342-90430/backend/src/api/routes/admin.py", "pattern": "/^async def get_productivity_report($/", "language": "Python", "kind": "function", "signature": "( start_date: Optional[str] = Query(None), end_date: Optional[str] = Query(None), department: Optional[str] = Query(None), current_user: Employee = Depends(get_admin_user) )"}, {"_type": "tag", "name": "get_system_settings", "path": "/home/kavia/workspace/code-generation/employee-activity-and-management-system-90342-90430/backend/src/api/routes/admin.py", "pattern": "/^async def get_system_settings(current_user: Employee = Depends(get_admin_user)):$/", "language": "Python", "kind": "function", "signature": "(current_user: Employee = Depends(get_admin_user))"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/employee-activity-and-management-system-90342-90430/backend/src/api/routes/admin.py", "pattern": "/^router = APIRouter(prefix=\"\\/admin\", tags=[\"admin\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_system_settings", "path": "/home/kavia/workspace/code-generation/employee-activity-and-management-system-90342-90430/backend/src/api/routes/admin.py", "pattern": "/^async def update_system_settings($/", "language": "Python", "kind": "function", "signature": "( settings_update: SettingsUpdate, current_user: Employee = Depends(get_admin_user) )"}], "hash": "3ac820a7e517e60ccb1ee43c714bf13a", "format-version": 4, "code-base-name": "backend", "filename": "backend/src/api/routes/admin.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/admin\", tags=[\"admin\"])", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"27": ""}]}