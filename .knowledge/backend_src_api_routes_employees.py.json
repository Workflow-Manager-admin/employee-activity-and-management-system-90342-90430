{"is_source_file": true, "format": "Python", "description": "This file defines API routes for managing employee data within a FastAPI application. It includes endpoints for creating, retrieving, updating, and deleting employee records, as well as fetching direct reports for a manager. The code interacts with storage for data persistence and enforces access control via dependencies and permission checks.", "external_files": ["../models", "../storage", "../auth"], "external_methods": ["storage.create_employee", "storage.create_audit_entry", "storage.get_all_employees", "storage.get_employee", "storage.update_employee", "storage.delete_employee", "can_access_employee_data", "get_current_user", "get_admin_user"], "published": ["router"], "classes": [{"name": "APIRouter", "description": "FastAPI router class used to define route groups for employee management."}, {"name": "EmployeeResponse", "description": "Pydantic model used to structure employee data in API responses."}], "methods": [{"name": "create_employee( employee_data: EmployeeCreate, current_user: Employee = Depends(get_admin_user) )", "description": "Creates a new employee record; only accessible by admins.", "scope": "", "scopeKind": ""}, {"name": "get_all_employees( active_only: bool = True, current_user: Employee = Depends(get_admin_user) )", "description": "Retrieves a list of all employees, optionally filtering only active ones; only accessible by admins.", "scope": "", "scopeKind": ""}, {"name": "get_current_employee(current_user: Employee = Depends(get_current_user))", "description": "Returns the current authenticated employee\u2019s data.", "scope": "", "scopeKind": ""}, {"name": "get_employee( employee_id: str, current_user: Employee = Depends(get_current_user) )", "description": "Retrieves details of a specific employee by ID, accessible based on permissions.", "scope": "", "scopeKind": ""}, {"name": "update_employee( employee_id: str, employee_update: EmployeeUpdate, current_user: Employee = Depends(get_current_user) )", "description": "Updates employee details; permissions are consultative based on roles.", "scope": "", "scopeKind": ""}, {"name": "delete_employee( employee_id: str, current_user: Employee = Depends(get_admin_user) )", "description": "Soft deletes (deactivates) an employee; only accessible by admins.", "scope": "", "scopeKind": ""}, {"name": "get_direct_reports( manager_id: str, current_user: Employee = Depends(get_current_user) )", "description": "Fetches direct reports for a given manager; accessible by that manager or admin.", "scope": "", "scopeKind": ""}], "calls": ["storage.create_employee", "storage.create_audit_entry", "storage.get_all_employees", "storage.get_employee", "storage.update_employee", "storage.delete_employee", "storage.create_audit_entry", "storage.get_all_employees", "storage.get_employee", "storage.update_employee", "storage.create_audit_entry", "storage.delete_employee", "storage.get_all_employees"], "search-terms": ["/employees.", "APIRouter", "role", "direct-reports", "employee_id", "EmployeeResponse", "storage", "auth", "MANAGER", "ADMIN"], "state": 2, "file_id": 9, "knowledge_revision": 50, "git_revision": "e4a6b3552a677d42c09fb03f4577c207fe3e7a81", "revision_history": [{"19": ""}, {"50": "e4a6b3552a677d42c09fb03f4577c207fe3e7a81"}], "ctags": [{"_type": "tag", "name": "create_employee", "path": "/home/kavia/workspace/code-generation/employee-activity-and-management-system-90342-90430/backend/src/api/routes/employees.py", "pattern": "/^async def create_employee($/", "language": "Python", "kind": "function", "signature": "( employee_data: EmployeeCreate, current_user: Employee = Depends(get_admin_user) )"}, {"_type": "tag", "name": "delete_employee", "path": "/home/kavia/workspace/code-generation/employee-activity-and-management-system-90342-90430/backend/src/api/routes/employees.py", "pattern": "/^async def delete_employee($/", "language": "Python", "kind": "function", "signature": "( employee_id: str, current_user: Employee = Depends(get_admin_user) )"}, {"_type": "tag", "name": "get_all_employees", "path": "/home/kavia/workspace/code-generation/employee-activity-and-management-system-90342-90430/backend/src/api/routes/employees.py", "pattern": "/^async def get_all_employees($/", "language": "Python", "kind": "function", "signature": "( active_only: bool = True, current_user: Employee = Depends(get_admin_user) )"}, {"_type": "tag", "name": "get_current_employee", "path": "/home/kavia/workspace/code-generation/employee-activity-and-management-system-90342-90430/backend/src/api/routes/employees.py", "pattern": "/^async def get_current_employee(current_user: Employee = Depends(get_current_user)):$/", "language": "Python", "kind": "function", "signature": "(current_user: Employee = Depends(get_current_user))"}, {"_type": "tag", "name": "get_direct_reports", "path": "/home/kavia/workspace/code-generation/employee-activity-and-management-system-90342-90430/backend/src/api/routes/employees.py", "pattern": "/^async def get_direct_reports($/", "language": "Python", "kind": "function", "signature": "( manager_id: str, current_user: Employee = Depends(get_current_user) )"}, {"_type": "tag", "name": "get_employee", "path": "/home/kavia/workspace/code-generation/employee-activity-and-management-system-90342-90430/backend/src/api/routes/employees.py", "pattern": "/^async def get_employee($/", "language": "Python", "kind": "function", "signature": "( employee_id: str, current_user: Employee = Depends(get_current_user) )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/employee-activity-and-management-system-90342-90430/backend/src/api/routes/employees.py", "pattern": "/^router = APIRouter(prefix=\"\\/employees\", tags=[\"employees\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_employee", "path": "/home/kavia/workspace/code-generation/employee-activity-and-management-system-90342-90430/backend/src/api/routes/employees.py", "pattern": "/^async def update_employee($/", "language": "Python", "kind": "function", "signature": "( employee_id: str, employee_update: EmployeeUpdate, current_user: Employee = Depends(get_current_user) )"}], "hash": "923b5d9b0d77807a5646ab085096df44", "format-version": 4, "code-base-name": "backend", "filename": "backend/src/api/routes/employees.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/employees\", tags=[\"employees\"])", "scope": "", "scopeKind": "", "description": "unavailable"}]}